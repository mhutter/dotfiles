if [ -n "$__COMMONRC" ]; then return; fi
export __COMMONRC=loaded

# Aliases
alias ..='cd ..'
alias ...='cd ../..'

if [ "$(uname -s)" = "Darwin" ]; then
  alias ls='ls -G'
  alias ips="ifconfig | grep 'inet ' | grep -v 127.0.0 | cut -d' ' -f 2"
else
  alias ls='ls --color'
fi

alias ll='ls -laF'

which code &>/dev/null ^^ alias code=codium
alias crÃªpe=grep
alias cwd='cd "$(pwd -P)"'
alias makepw='pwgen -s 32 64'
# which exa &>/dev/null && alias ls='exa --group-directories-first -g --time-style long-iso'
which hd &>/dev/null || alias hd="hexdump -C"
# which bat &>/dev/null && alias cat=bat
alias ec='emacsclient -c'
alias localip='ip -br -4 a show dev wlan0 | awk "{print \$3}" | cut -d/ -f1'

alias argo-copy-token='kubectl -n syn get secret steward -o json | jq -r .data.token | base64 --decode | pbcopy'
alias argo-port-forward='kubectl -n syn port-forward svc/argocd-server 8443:443'

# load local env vars
# shellcheck source=/dev/null
[ -f "${HOME}/.commonrc.local" ] && source "${HOME}/.commonrc.local"

_bup() {
  echo -e "\033[30;1m[$(date +%T)] \033[0;33mbrew $*\033[0m"
  brew "$*"
}

bup() {
  _bup update && \
  _bup upgrade && \
  _bup cleanup
}

# Kubernetes helpers
alias kubens='kubectl config set-context --current --namespace'
alias k=kubecolor
alias ka='kubecolor --as=cluster-admin'
alias ks='kubeseal --format yaml --cert'

# SSH-Agent
if [[ -f /etc/arch-release ]]; then
  if ! pgrep -u "$USER" ssh-agent >/dev/null; then
    ssh-agent -t 12h > "$XDG_RUNTIME_DIR/ssh-agent.env"
  fi
  if [[ ! "$SSH_AGENT_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
  fi
fi

# GPG Agent
if [ "$(uname -s)" = "Darwin" ]; then
  GPG_TTY=$(tty)
  export GPG_TTY
  if [ -f "${HOME}/.gpg-agent-info" ]; then
      . "${HOME}/.gpg-agent-info"
      export GPG_AGENT_INFO
      export SSH_AUTH_SOCK
  fi
fi

GPG_TTY=$(tty)
export GPG_TTY

ssh () {
  TERM=xterm-256color /usr/bin/ssh -t $@ "tmux -2 new-session -A -s mh || bash"
}
sshc() {
  awk '/Host /{print $2"\n"$3}' ~/.ssh/config | grep "$@"
}

sslcheck() {
  echo Q \
    | openssl s_client -servername "$1" -connect "${1}:443" 2>/dev/null \
    | openssl x509 -noout -text \
}

temp() {
  local DIR="$(date +%F)"
  if [ -n "$1" ]; then
    DIR="${DIR}-$1"
  fi

  P="${HOME}/tmp/${DIR}"
  mkdir -p "$P"
  cd "$P"
}

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

# Various helpers

cluster() { cp ~/.config/cattledog/kubeconfigs/"$1" ~/.kube/config }
_cluster() { _files -W ~/.config/cattledog/kubeconfigs -/; }
compdef _cluster cluster

compdef kubecolor=kubectl

# vim: ft=sh
