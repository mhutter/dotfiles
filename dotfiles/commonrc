if [ -n "$__COMMONRC" ]; then return; fi
export __COMMONRC=loaded

# Aliases
alias ..='cd ..'
alias ...='cd ../..'

if [ "$(uname -s)" = "Darwin" ]; then
  alias ls='ls -G'
else
  alias ls='ls --color'
fi

alias ll='ls -laF'

alias cleanup-known-hosts="sed -i .bak -E '/^(49|157|159|116|78|88|168|188)\./d' ~/.ssh/known_hosts"
which code &>/dev/null ^^ alias code=codium
alias crÃªpe=grep
alias cwd='cd "$(pwd -P)"'
alias ips="ifconfig | grep 'inet ' | grep -v 127.0.0 | cut -d' ' -f 2"
alias makepw='pwgen -s 32 64'
alias t=task
which exa &>/dev/null && alias ls='exa --group-directories-first -g --time-style long-iso'
which hd &>/dev/null || alias hd="hexdump -C"
which podman &>/dev/null && alias docker=podman

alias argo-copy-token='kubectl -n syn get secret steward -o json | jq -r .data.token | base64 --decode | pbcopy'
alias argo-port-forward='kubectl -n syn port-forward svc/argocd-server 8443:443'

_bup() {
  echo -e "\033[30;1m[$(date +%T)] \033[0;33mbrew $*\033[0m"
  brew "$*"
}

bup() {
  _bup update && \
  _bup upgrade && \
  _bup cleanup
}

# Kubernetes helpers
alias kubens='kubectl config set-context --current --namespace'
alias k=kubectl
alias kaf='kubectl apply -f'
alias ks='kubeseal --format yaml --cert'

# SSH-Agent
if [[ -f /etc/arch-release ]]; then
  if ! pgrep -u "$USER" ssh-agent >/dev/null; then
    ssh-agent -t 12h > "$XDG_RUNTIME_DIR/ssh-agent.env"
  fi
  if [[ ! "$SSH_AGENT_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
  fi
fi

# GPG Agent
if [ "$(uname -s)" = "Darwin" ]; then
  GPG_TTY=$(tty)
  export GPG_TTY
  if [ -f "${HOME}/.gpg-agent-info" ]; then
      . "${HOME}/.gpg-agent-info"
      export GPG_AGENT_INFO
      export SSH_AUTH_SOCK
  fi
fi

GPG_TTY=$(tty)
export GPG_TTY


function ssh () {
  TERM=${TERM//-unicode-/-}
  TERM=${TERM//screen\./}
  /usr/bin/ssh -t $@ "tmux new-session -A -s mh || bash"
}
sshc() {
  awk '/Host /{print $2"\n"$3}' ~/.ssh/config | grep "$@"
}

sslcheck() {
  echo Q \
    | openssl s_client -servername "$1" -connect "${1}:443" 2>/dev/null \
    | openssl x509 -noout -text \
#    | grep -Ei 'not (before|after)|(subject|dns):'
}

temp() {
  local DIR="$(date +%F)"
  if [ -n "$1" ]; then
    DIR="${DIR}-$1"
  fi

  P="${HOME}/tmp/${DIR}"
  mkdir -p "$P"
  cd "$P"
}

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

# Various helpers

commodore() {
  docker run \
    -it \
    --rm \
    --user="0" \
    --env "COMMODORE_API_URL=$COMMODORE_API_URL" \
    --env "COMMODORE_API_TOKEN=$COMMODORE_API_TOKEN" \
    --env SSH_AUTH_SOCK=/tmp/ssh_agent.sock \
    --volume "/run/host-services/ssh-auth.sock:/tmp/ssh_agent.sock" \
    --volume "${HOME}/.ssh/known_hosts:/app/.ssh/known_hosts:ro" \
    --volume "${HOME}/.gitconfig:/app/.gitconfig:ro" \
    --volume "${PWD}:/app/data" \
    --workdir /app/data \
    docker.io/projectsyn/commodore:latest \
    "$@"
}

# vim: ft=sh
